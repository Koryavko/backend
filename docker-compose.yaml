version: "3.7"

services:
  main:
    image: main
    container_name: ${APP_NAME}-Main
    volumes:
      - .:/usr/src/app:delegated
    build:
      context: ./
      target: development
    networks:
      - backend
    depends_on:
      - redis
      - postgres
    env_file:
      - .env
    restart: on-failure
    command: "npm run start:debug"

  postgres:
    image: postgres
    container_name: ${APP_NAME}-Postgres
    build:
      context: ./docker/postgres
    networks:
      - backend
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres:/docker-entrypoint-initdb.d
      - koryavko-postgres:/data:delegated
    environment:
      POSTGRES_PASSWORD: testpassword
      POSTGRES_USER: testuser
      POSTGRES_MULTIPLE_DATABASES: main_db
    restart: on-failure

  redis:
    image: redis:alpine
    container_name: ${APP_NAME}-Redis
    command: redis-server --requirepass root
    volumes:
      - koryavko-redis:/data:delegated
    ports:
      - "36379:6379"
    expose:
      - "6379"
    networks:
      - backend
    restart: on-failure

#  minio:
#    image: minio/minio
#    command: minio server --console-address ":9090" /data
#    container_name: ${APP_NAME}-minio
#    ports:
#      - "9000:9000"
#      - "9090:9090"
#    environment:
#      MINIO_ROOT_USER: minio
#      MINIO_ROOT_PASSWORD: minio123
#
#    restart: always
#    volumes:
#      - minio_storage:/data
#    networks:
#      - backend
#
#  createbuckets:
#    image: minio/mc
#    container_name: ${APP_NAME}-createbuckets
#    depends_on:
#      - minio
#    networks:
#      - backend
#    entrypoint: >
#      /bin/sh -c "
#      /usr/bin/mc config host add myminio http://minio:9000 minio minio123;
#      /usr/bin/mc mb myminio/minio-bucket;
#      exit 0;
#      "

networks:
  backend:

volumes:
  koryavko-redis:
    driver: local
  koryavko-postgres:
    driver: local
#  minio_storage:
#    driver: local
